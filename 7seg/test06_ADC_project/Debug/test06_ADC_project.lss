
test06_ADC_project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  00000350  000003e4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000350  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800118  00800118  000003fc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000003fc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000042c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  00000468  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c7f  00000000  00000000  000004d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a21  00000000  00000000  00001157  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005b7  00000000  00000000  00001b78  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000010c  00000000  00000000  00002130  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004cf  00000000  00000000  0000223c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000343  00000000  00000000  0000270b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00002a4e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e5       	ldi	r30, 0x50	; 80
  a0:	f3 e0       	ldi	r31, 0x03	; 3
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a8 31       	cpi	r26, 0x18	; 24
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a8 e1       	ldi	r26, 0x18	; 24
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ad 31       	cpi	r26, 0x1D	; 29
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	07 d0       	rcall	.+14     	; 0xd2 <main>
  c4:	43 c1       	rjmp	.+646    	; 0x34c <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <read_ADC>:
	ADCSRA |= (1 << ADSC);
}

int read_ADC(void)
{
	while(!(ADCSRA & (1 << ADIF)));
  c8:	34 9b       	sbis	0x06, 4	; 6
  ca:	fe cf       	rjmp	.-4      	; 0xc8 <read_ADC>
	
	return ADC;
  cc:	84 b1       	in	r24, 0x04	; 4
  ce:	95 b1       	in	r25, 0x05	; 5
}
  d0:	08 95       	ret

000000d2 <main>:
int main(void)
{
	/* Replace with your application code */
	DDRD = 0xff;
  d2:	8f ef       	ldi	r24, 0xFF	; 255
  d4:	81 bb       	out	0x11, r24	; 17
	DDRE = 0x0f;
  d6:	8f e0       	ldi	r24, 0x0F	; 15
  d8:	82 b9       	out	0x02, r24	; 2
	DDRF = 0x00;
  da:	e1 e6       	ldi	r30, 0x61	; 97
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	10 82       	st	Z, r1
	DDRF = 0x04;
  e0:	84 e0       	ldi	r24, 0x04	; 4
  e2:	80 83       	st	Z, r24
	EIMSK = 0x70;
  e4:	80 e7       	ldi	r24, 0x70	; 112
  e6:	89 bf       	out	0x39, r24	; 57
	EICRB = 0b00101010;
  e8:	8a e2       	ldi	r24, 0x2A	; 42
  ea:	8a bf       	out	0x3a, r24	; 58
	SegPort(&PORTD, &PORTE);
  ec:	63 e2       	ldi	r22, 0x23	; 35
  ee:	70 e0       	ldi	r23, 0x00	; 0
  f0:	82 e3       	ldi	r24, 0x32	; 50
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	13 d0       	rcall	.+38     	; 0x11c <SegPort>
	SREG |= 0x80;
  f6:	8f b7       	in	r24, 0x3f	; 63
  f8:	80 68       	ori	r24, 0x80	; 128
  fa:	8f bf       	out	0x3f, r24	; 63
	sei(); //set interrupt
	unsigned int read;
	
	while (1)
	{
		read = read_ADC();
  fc:	78 94       	sei
  fe:	e4 df       	rcall	.-56     	; 0xc8 <read_ADC>
 100:	68 2f       	mov	r22, r24
 102:	79 2f       	mov	r23, r25
		PORTF = read;
 104:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>
		SegDisp(read);
 108:	80 e0       	ldi	r24, 0x00	; 0
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	4d d0       	rcall	.+154    	; 0x1a8 <SegDisp>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 10e:	8f e3       	ldi	r24, 0x3F	; 63
 110:	9c e9       	ldi	r25, 0x9C	; 156
 112:	01 97       	sbiw	r24, 0x01	; 1
 114:	f1 f7       	brne	.-4      	; 0x112 <main+0x40>
 116:	00 c0       	rjmp	.+0      	; 0x118 <main+0x46>
 118:	00 00       	nop
 11a:	f1 cf       	rjmp	.-30     	; 0xfe <main+0x2c>

0000011c <SegPort>:
 11c:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <PA+0x1>
 120:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <PA>
 124:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <PB+0x1>
 128:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <PB>
 12c:	08 95       	ret

0000012e <seg>:
 12e:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <PB>
 132:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <PB+0x1>
 136:	90 81       	ld	r25, Z
 138:	9f 60       	ori	r25, 0x0F	; 15
 13a:	90 83       	st	Z, r25
 13c:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <PB>
 140:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <PB+0x1>
 144:	90 81       	ld	r25, Z
 146:	21 e0       	ldi	r18, 0x01	; 1
 148:	30 e0       	ldi	r19, 0x00	; 0
 14a:	02 c0       	rjmp	.+4      	; 0x150 <seg+0x22>
 14c:	22 0f       	add	r18, r18
 14e:	33 1f       	adc	r19, r19
 150:	8a 95       	dec	r24
 152:	e2 f7       	brpl	.-8      	; 0x14c <seg+0x1e>
 154:	20 95       	com	r18
 156:	29 23       	and	r18, r25
 158:	20 83       	st	Z, r18
 15a:	e0 91 04 01 	lds	r30, 0x0104	; 0x800104 <PA>
 15e:	f0 91 05 01 	lds	r31, 0x0105	; 0x800105 <PA+0x1>
 162:	60 83       	st	Z, r22
 164:	8f e1       	ldi	r24, 0x1F	; 31
 166:	9e e4       	ldi	r25, 0x4E	; 78
 168:	01 97       	sbiw	r24, 0x01	; 1
 16a:	f1 f7       	brne	.-4      	; 0x168 <seg+0x3a>
 16c:	00 c0       	rjmp	.+0      	; 0x16e <seg+0x40>
 16e:	00 00       	nop
 170:	08 95       	ret

00000172 <FND_4>:
 172:	0f 93       	push	r16
 174:	1f 93       	push	r17
 176:	cf 93       	push	r28
 178:	df 93       	push	r29
 17a:	8c 01       	movw	r16, r24
 17c:	c0 e0       	ldi	r28, 0x00	; 0
 17e:	d0 e0       	ldi	r29, 0x00	; 0
 180:	07 c0       	rjmp	.+14     	; 0x190 <FND_4+0x1e>
 182:	f8 01       	movw	r30, r16
 184:	ec 0f       	add	r30, r28
 186:	fd 1f       	adc	r31, r29
 188:	60 81       	ld	r22, Z
 18a:	ce 01       	movw	r24, r28
 18c:	d0 df       	rcall	.-96     	; 0x12e <seg>
 18e:	21 96       	adiw	r28, 0x01	; 1
 190:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 194:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 198:	c8 17       	cp	r28, r24
 19a:	d9 07       	cpc	r29, r25
 19c:	94 f3       	brlt	.-28     	; 0x182 <FND_4+0x10>
 19e:	df 91       	pop	r29
 1a0:	cf 91       	pop	r28
 1a2:	1f 91       	pop	r17
 1a4:	0f 91       	pop	r16
 1a6:	08 95       	ret

000001a8 <SegDisp>:
 1a8:	4f 92       	push	r4
 1aa:	5f 92       	push	r5
 1ac:	6f 92       	push	r6
 1ae:	7f 92       	push	r7
 1b0:	8f 92       	push	r8
 1b2:	9f 92       	push	r9
 1b4:	af 92       	push	r10
 1b6:	bf 92       	push	r11
 1b8:	cf 92       	push	r12
 1ba:	df 92       	push	r13
 1bc:	ef 92       	push	r14
 1be:	ff 92       	push	r15
 1c0:	0f 93       	push	r16
 1c2:	1f 93       	push	r17
 1c4:	cf 93       	push	r28
 1c6:	df 93       	push	r29
 1c8:	21 b3       	in	r18, 0x11	; 17
 1ca:	2f ef       	ldi	r18, 0xFF	; 255
 1cc:	21 bb       	out	0x11, r18	; 17
 1ce:	22 b1       	in	r18, 0x02	; 2
 1d0:	2f 60       	ori	r18, 0x0F	; 15
 1d2:	22 b9       	out	0x02, r18	; 2
 1d4:	2f ef       	ldi	r18, 0xFF	; 255
 1d6:	3f ef       	ldi	r19, 0xFF	; 255
 1d8:	40 e0       	ldi	r20, 0x00	; 0
 1da:	50 e0       	ldi	r21, 0x00	; 0
 1dc:	95 d0       	rcall	.+298    	; 0x308 <__udivmodsi4>
 1de:	6b 01       	movw	r12, r22
 1e0:	7c 01       	movw	r14, r24
 1e2:	0f 2e       	mov	r0, r31
 1e4:	fa e0       	ldi	r31, 0x0A	; 10
 1e6:	4f 2e       	mov	r4, r31
 1e8:	51 2c       	mov	r5, r1
 1ea:	61 2c       	mov	r6, r1
 1ec:	71 2c       	mov	r7, r1
 1ee:	f0 2d       	mov	r31, r0
 1f0:	a3 01       	movw	r20, r6
 1f2:	92 01       	movw	r18, r4
 1f4:	89 d0       	rcall	.+274    	; 0x308 <__udivmodsi4>
 1f6:	4b 01       	movw	r8, r22
 1f8:	5c 01       	movw	r10, r24
 1fa:	ca 01       	movw	r24, r20
 1fc:	b9 01       	movw	r22, r18
 1fe:	a3 01       	movw	r20, r6
 200:	92 01       	movw	r18, r4
 202:	82 d0       	rcall	.+260    	; 0x308 <__udivmodsi4>
 204:	8b 01       	movw	r16, r22
 206:	c7 01       	movw	r24, r14
 208:	b6 01       	movw	r22, r12
 20a:	24 e6       	ldi	r18, 0x64	; 100
 20c:	30 e0       	ldi	r19, 0x00	; 0
 20e:	40 e0       	ldi	r20, 0x00	; 0
 210:	50 e0       	ldi	r21, 0x00	; 0
 212:	7a d0       	rcall	.+244    	; 0x308 <__udivmodsi4>
 214:	ca 01       	movw	r24, r20
 216:	b9 01       	movw	r22, r18
 218:	a3 01       	movw	r20, r6
 21a:	92 01       	movw	r18, r4
 21c:	75 d0       	rcall	.+234    	; 0x308 <__udivmodsi4>
 21e:	eb 01       	movw	r28, r22
 220:	c7 01       	movw	r24, r14
 222:	b6 01       	movw	r22, r12
 224:	28 ee       	ldi	r18, 0xE8	; 232
 226:	33 e0       	ldi	r19, 0x03	; 3
 228:	40 e0       	ldi	r20, 0x00	; 0
 22a:	50 e0       	ldi	r21, 0x00	; 0
 22c:	6d d0       	rcall	.+218    	; 0x308 <__udivmodsi4>
 22e:	88 ee       	ldi	r24, 0xE8	; 232
 230:	c8 16       	cp	r12, r24
 232:	83 e0       	ldi	r24, 0x03	; 3
 234:	d8 06       	cpc	r13, r24
 236:	e1 04       	cpc	r14, r1
 238:	f1 04       	cpc	r15, r1
 23a:	d0 f4       	brcc	.+52     	; 0x270 <SegDisp+0xc8>
 23c:	84 e6       	ldi	r24, 0x64	; 100
 23e:	c8 16       	cp	r12, r24
 240:	d1 04       	cpc	r13, r1
 242:	e1 04       	cpc	r14, r1
 244:	f1 04       	cpc	r15, r1
 246:	58 f4       	brcc	.+22     	; 0x25e <SegDisp+0xb6>
 248:	8a e0       	ldi	r24, 0x0A	; 10
 24a:	c8 16       	cp	r12, r24
 24c:	d1 04       	cpc	r13, r1
 24e:	e1 04       	cpc	r14, r1
 250:	f1 04       	cpc	r15, r1
 252:	40 f0       	brcs	.+16     	; 0x264 <SegDisp+0xbc>
 254:	21 e1       	ldi	r18, 0x11	; 17
 256:	30 e0       	ldi	r19, 0x00	; 0
 258:	c1 e1       	ldi	r28, 0x11	; 17
 25a:	d0 e0       	ldi	r29, 0x00	; 0
 25c:	09 c0       	rjmp	.+18     	; 0x270 <SegDisp+0xc8>
 25e:	21 e1       	ldi	r18, 0x11	; 17
 260:	30 e0       	ldi	r19, 0x00	; 0
 262:	06 c0       	rjmp	.+12     	; 0x270 <SegDisp+0xc8>
 264:	21 e1       	ldi	r18, 0x11	; 17
 266:	30 e0       	ldi	r19, 0x00	; 0
 268:	c1 e1       	ldi	r28, 0x11	; 17
 26a:	d0 e0       	ldi	r29, 0x00	; 0
 26c:	01 e1       	ldi	r16, 0x11	; 17
 26e:	10 e0       	ldi	r17, 0x00	; 0
 270:	88 ee       	ldi	r24, 0xE8	; 232
 272:	c8 16       	cp	r12, r24
 274:	83 e0       	ldi	r24, 0x03	; 3
 276:	d8 06       	cpc	r13, r24
 278:	e1 04       	cpc	r14, r1
 27a:	f1 04       	cpc	r15, r1
 27c:	78 f4       	brcc	.+30     	; 0x29c <SegDisp+0xf4>
 27e:	84 e6       	ldi	r24, 0x64	; 100
 280:	c8 16       	cp	r12, r24
 282:	d1 04       	cpc	r13, r1
 284:	e1 04       	cpc	r14, r1
 286:	f1 04       	cpc	r15, r1
 288:	60 f4       	brcc	.+24     	; 0x2a2 <SegDisp+0xfa>
 28a:	8a e0       	ldi	r24, 0x0A	; 10
 28c:	c8 16       	cp	r12, r24
 28e:	d1 04       	cpc	r13, r1
 290:	e1 04       	cpc	r14, r1
 292:	f1 04       	cpc	r15, r1
 294:	48 f0       	brcs	.+18     	; 0x2a8 <SegDisp+0x100>
 296:	82 e0       	ldi	r24, 0x02	; 2
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	08 c0       	rjmp	.+16     	; 0x2ac <SegDisp+0x104>
 29c:	84 e0       	ldi	r24, 0x04	; 4
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	05 c0       	rjmp	.+10     	; 0x2ac <SegDisp+0x104>
 2a2:	83 e0       	ldi	r24, 0x03	; 3
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	02 c0       	rjmp	.+4      	; 0x2ac <SegDisp+0x104>
 2a8:	81 e0       	ldi	r24, 0x01	; 1
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2b0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 2b4:	f4 01       	movw	r30, r8
 2b6:	ea 5f       	subi	r30, 0xFA	; 250
 2b8:	fe 4f       	sbci	r31, 0xFE	; 254
 2ba:	80 81       	ld	r24, Z
 2bc:	e8 e1       	ldi	r30, 0x18	; 24
 2be:	f1 e0       	ldi	r31, 0x01	; 1
 2c0:	80 83       	st	Z, r24
 2c2:	d8 01       	movw	r26, r16
 2c4:	aa 5f       	subi	r26, 0xFA	; 250
 2c6:	be 4f       	sbci	r27, 0xFE	; 254
 2c8:	8c 91       	ld	r24, X
 2ca:	81 83       	std	Z+1, r24	; 0x01
 2cc:	ca 5f       	subi	r28, 0xFA	; 250
 2ce:	de 4f       	sbci	r29, 0xFE	; 254
 2d0:	88 81       	ld	r24, Y
 2d2:	82 83       	std	Z+2, r24	; 0x02
 2d4:	d9 01       	movw	r26, r18
 2d6:	aa 5f       	subi	r26, 0xFA	; 250
 2d8:	be 4f       	sbci	r27, 0xFE	; 254
 2da:	8c 91       	ld	r24, X
 2dc:	83 83       	std	Z+3, r24	; 0x03
 2de:	cf 01       	movw	r24, r30
 2e0:	48 df       	rcall	.-368    	; 0x172 <FND_4>
 2e2:	88 e1       	ldi	r24, 0x18	; 24
 2e4:	91 e0       	ldi	r25, 0x01	; 1
 2e6:	df 91       	pop	r29
 2e8:	cf 91       	pop	r28
 2ea:	1f 91       	pop	r17
 2ec:	0f 91       	pop	r16
 2ee:	ff 90       	pop	r15
 2f0:	ef 90       	pop	r14
 2f2:	df 90       	pop	r13
 2f4:	cf 90       	pop	r12
 2f6:	bf 90       	pop	r11
 2f8:	af 90       	pop	r10
 2fa:	9f 90       	pop	r9
 2fc:	8f 90       	pop	r8
 2fe:	7f 90       	pop	r7
 300:	6f 90       	pop	r6
 302:	5f 90       	pop	r5
 304:	4f 90       	pop	r4
 306:	08 95       	ret

00000308 <__udivmodsi4>:
 308:	a1 e2       	ldi	r26, 0x21	; 33
 30a:	1a 2e       	mov	r1, r26
 30c:	aa 1b       	sub	r26, r26
 30e:	bb 1b       	sub	r27, r27
 310:	fd 01       	movw	r30, r26
 312:	0d c0       	rjmp	.+26     	; 0x32e <__udivmodsi4_ep>

00000314 <__udivmodsi4_loop>:
 314:	aa 1f       	adc	r26, r26
 316:	bb 1f       	adc	r27, r27
 318:	ee 1f       	adc	r30, r30
 31a:	ff 1f       	adc	r31, r31
 31c:	a2 17       	cp	r26, r18
 31e:	b3 07       	cpc	r27, r19
 320:	e4 07       	cpc	r30, r20
 322:	f5 07       	cpc	r31, r21
 324:	20 f0       	brcs	.+8      	; 0x32e <__udivmodsi4_ep>
 326:	a2 1b       	sub	r26, r18
 328:	b3 0b       	sbc	r27, r19
 32a:	e4 0b       	sbc	r30, r20
 32c:	f5 0b       	sbc	r31, r21

0000032e <__udivmodsi4_ep>:
 32e:	66 1f       	adc	r22, r22
 330:	77 1f       	adc	r23, r23
 332:	88 1f       	adc	r24, r24
 334:	99 1f       	adc	r25, r25
 336:	1a 94       	dec	r1
 338:	69 f7       	brne	.-38     	; 0x314 <__udivmodsi4_loop>
 33a:	60 95       	com	r22
 33c:	70 95       	com	r23
 33e:	80 95       	com	r24
 340:	90 95       	com	r25
 342:	9b 01       	movw	r18, r22
 344:	ac 01       	movw	r20, r24
 346:	bd 01       	movw	r22, r26
 348:	cf 01       	movw	r24, r30
 34a:	08 95       	ret

0000034c <_exit>:
 34c:	f8 94       	cli

0000034e <__stop_program>:
 34e:	ff cf       	rjmp	.-2      	; 0x34e <__stop_program>
